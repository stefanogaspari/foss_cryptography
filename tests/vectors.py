# Test ellipticCurves.py module
n = 0xD30519BCAE8D180DBFCC94FE0B8383DC310185B0BE97B4365083EBCECCD75759  
n_times_P_vector = [0x3AF1E1EFA4D1E1AD5CB9E3967E98E901DAFCD37C44CF0BFB6C216997F5EE51DF, 0xE4ACAC3E6F139E0C7DB2BD736824F51392BDA176965A1C59EB9C3C5FF9E85D7A]

# Test rfc6979.py module
# SHA256, secp256r1, 'sample'
h_sha256_sample_secp256r1 = 'sha256'
m_sha256_sample_secp256r1 = b'sample'
x_sha256_sample_secp256r1 = 0xC9AFA9D845BA75166B5C215767B1D6934E50C3DB36E89B127B8A622B120F6721
x1_pub_sha256_sample_secp256r1 = 0x60FED4BA255A9D31C961EB74C6356D68C049B8923B61FA6CE669622E60F29FB6
x2_pub_sha256_sample_secp256r1 = 0x7903FE1008B8BC99A41AE9E95628BC64F2F1B20C2D7E9F5177A3C294D4462299
k_sha256_sample_secp256r1 = 0xA6E3C57DD01ABE90086538398355DD4C3B17AA873382B0F24D6129493D8AAD60
r_sha256_sample_secp256r1 = 0xEFD48B2AACB6A8FD1140DD9CD45E81D69D2C877B56AAF991C34D0EA84EAF3716
s_sha256_sample_secp256r1 = 0xF7CB1C942D657C41D436C7A1B6E29F65F3E900DBB9AFF4064DC4AB2F843ACDA8